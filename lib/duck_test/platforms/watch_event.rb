module DuckTest
  module Platforms

    # A watch event represents some type of change to the file system.  A directory / file is changed, created, or deleted.
    class WatchEvent

      # See {#initialize}
      attr_accessor :source

      # See {#initialize}
      attr_accessor :file_spec

      # See {#initialize}
      attr_accessor :flag

      # See {#initialize}
      attr_accessor :cargo

      # See {#initialize}
      attr_accessor :event

      ##################################################################################
      # Initialize a new WatchEvent
      # @param [Object] source          A reference to the calling object that triggered the watch event.
      # @param [String] file_spec       A file name that adheres to {http://ruby-doc.org/core-1.9.3/File.html#method-c-basename File.basename}.
      #                                 The full file specification of the file or directory on which the event occured.
      # @param [Symbol] flag            The type of event
      #                                 Supported events
      #                                   - :create              A new object under the watched object was created.
      #                                   - :destroy             The object being watched was destroyed.
      #                                   - :moved               The object being watched was moved into or out of the watched directory.
      #                                   - :update              The object being watched was updated.
      # @param [Object] event           Event generated by a native file watching class.
      # @return [WatchEvent]
      def initialize(source, file_spec, flag, event = nil)
        super()
        self.source = source
        self.file_spec = file_spec
        self.flag = flag
        self.event = event
        return self
      end

    end

  end
end
